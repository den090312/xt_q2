@using Common;
@using WEB_UI;
@{
    //Database.RunScript(Server, Database.WebUIscriptFileName);

    var guest    = Role.Create("Guest");
    var roleUser = Role.Create("User");
    var admin    = Role.Create("Admin");

    var currentUser = Webuser.Current;
    var root = Server.MapPath("~");

    var alert = string.Empty;
    var htmlRaw = string.Empty;

    if (IsPost)
    {
        var inputImage = WebImage.GetImageFromRequest();

        if (inputImage != null)
        {
            Index.ImageFromRequest = inputImage;
        }

        Index.Forms = Request.Form;
        Index.Files = HttpContext.Current.Request.Files;
        Index.MyServer = Server;
        Index.Run(out alert);

        //POST-reload page fix
        @Html.Raw("<script>document.location='index.cshtml'</script>");
    }
}
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <script src="~/Scripts/script.js"></script>
    <link rel="stylesheet" href="~/Content/styles.css" type="text/css" />
    <link rel="shortcut icon" href="favicon.ico" type="image/x-icon">
    <title>UserAwards</title>
</head>
<body>
    <div id="main" class="main">
        @if (!string.IsNullOrEmpty(alert))
            {<script>alert("@alert");</script>}
        <b id="messagebox">@Index.Message</b>
        <p class="currentUserName">User name: @(currentUser.Name)</p>
        <p class="currentUserRole">Role: @(currentUser.Role.Name)</p>
        @{
            if (currentUser.Role == guest)
            {
                @Html.Raw(File.ReadAllText(root + @"\Pages\Authentication.html"));
                <form method="post" action="" class="user_register" style="display: none;">
                    <p class="alertbox"></p>
                    @Html.Raw(File.ReadAllText(root + @"\Pages\RegistrationFields.html"))
                    Role:
                    @{
                        var roleList = Role.List;
                        foreach (var role in roleList)
                            {<label><input type="radio" name="roleName" value="@(role.Name)" checked />@(role.Name)</label>}
                    }
                    @Html.Raw(File.ReadAllText(root + @"\Pages\RegistrationFinish.html"))
                </form>
            }
            else
            {
                @Html.Raw(File.ReadAllText(root + @"\Pages\LogOut.html"));
            }

            if (currentUser.Role == admin)
            {
                htmlRaw = File.ReadAllText(root + @"\Pages\AllUserOperations.html");
            }

            if (currentUser.Role == guest || currentUser.Role == roleUser)
            {
                htmlRaw = File.ReadAllText(root + @"\Pages\UserPrint.html");
            }

            @Html.Raw(htmlRaw);

            htmlRaw = string.Empty;

            if (currentUser.Role == admin)
            {
                htmlRaw = File.ReadAllText(root + @"\Pages\AllAwardOperations.html");
            }

            @Html.Raw(htmlRaw);

            htmlRaw = string.Empty;

            if (currentUser.Role == admin)
            {
                htmlRaw = File.ReadAllText(root + @"\Pages\JoinOperations.html");
            }

            @Html.Raw(htmlRaw);
        }
    </div>
    <div class="operations">
        @Html.Raw(File.ReadAllText(root + @"\Pages\UserCreation.html"))
        @Html.Raw(File.ReadAllText(root + @"\Pages\AwardCreation.html"))
        @{
            if (currentUser.Role == admin)
            {
                <form method="post" action="" class="user_del" style="display: none;">
                    <h4>Choose user to delete:</h4>
                    <p>
                        <select class="user_chosen">
                            @{
                                var allUsers = DependencyResolver.UserLogic?.GetAll();
                                foreach (var user in allUsers)
                                    {<option selected>@(user.Name + " " + user.DateOfBirth.ToString(Entities.User.DateFormat))</option>}
                            }
                        </select>
                        <select class="user_chosen_guid" style="display: none;">
                            @{
                                foreach (var user in allUsers)
                                    {<option selected>@user.Guid.ToString()</option>}
                            }
                        </select>
                    </p>
                    @Html.Raw(File.ReadAllText(root + @"\Pages\UserDelete.html"))
                </form>
                <form method="post" action="" class="award_del" style="display: none;">
                    <h4>Choose award to delete:</h4>
                    <p>
                        <select class="award_chosen">
                            @{
                                var awards = DependencyResolver.AwardLogic?.GetAll();
                                foreach (var award in awards)
                                    {<option selected>@award.Title</option>}
                            }
                        </select>
                        <select class="award_chosen_guid" style="display: none;">
                            @{
                                foreach (var award in awards)
                                    {<option selected>@award.Guid.ToString()</option>}
                            }
                        </select>
                        <select class="award_chosen_in_user" style="display: none;">
                            @{
                                var userAwardLogic = DependencyResolver.UserAwardLogic;
                                int awardInUser;
                                foreach (var award in awards)
                                {
                                    if (userAwardLogic.AwardInUser(award))
                                    {
                                        awardInUser = 1;
                                    }
                                    else
                                    {
                                        awardInUser = 0;
                                    }
                                    <option selected>@awardInUser</option>
                                }
                            }
                        </select>
                    </p>
                    @Html.Raw(File.ReadAllText(root + @"\Pages\AwardDelete.html"))
                </form>
            }
        }
        <div class="listusers" style="display: none;">
            <input type="button" class="cancel" value="Back" style="display: block;" />
            @{
                var users = DependencyResolver.UserLogic?.GetAll();
                IEnumerable<Entities.Award> awardsByUser;
                foreach (var user in users)
                {
                    <img class="user_img" src="@Images.GetImgSrc(Images.GetImageGuidByUserGuid(user.Guid))">
                    <p>@(user.Name + " " + user.DateOfBirth.ToString(Entities.User.DateFormat))</p>
                    awardsByUser = DependencyResolver.UserAwardLogic?.GetAwardsByUserGuid(user.Guid);
                    if (currentUser.Role != guest)
                    {
                        foreach (var award in awardsByUser)
                        {
                            <div style="padding-left: 75px;">
                                <img class="award_img" src="@Images.GetImgSrc(Images.GetImageGuidByAwardGuid(award.Guid))">
                                <p>@(award.Title)</p>
                            </div>
                        }
                    }
                }
            }
            <input type="button" class="cancel" value="Back" />
        </div>
        @{
            if (currentUser.Role == admin)
            {
                <div class="listawards" style="display: none;">
                    <input type="button" class="cancel" value="Back" style="display: block;" />
                    @{
                        var allAwards = DependencyResolver.AwardLogic?.GetAll();
                        foreach (var award in allAwards)
                        {
                            <img class="award_img" src="@Images.GetImgSrc(Images.GetImageGuidByAwardGuid(award.Guid))">
                            <p>@award.Title</p>
                        }
                    }
                    <input type="button" class="cancel" value="Back" />
                </div>
                <form method="post" action="" class="join" style="display: none;">
                    <h3>Join</h3>
                    <div>
                        <h4>Choose user:</h4>
                        <p>
                            <select class="user_chosen_join">
                                @{
                                    users = DependencyResolver.UserLogic?.GetAll();
                                    foreach (var user in users)
                                        {<option selected>@(user.Name + " " + user.DateOfBirth.ToString(Entities.User.DateFormat))</option>}
                                }
                            </select>
                            <select class="user_chosen_join_guid" style="display: none;">
                                @{
                                    foreach (var user in users)
                                        {<option selected>@user.Guid.ToString()</option>}
                                }
                            </select>
                        </p>
                        <input type="text" class="user_guid_join" style="display: none;" name="userGuidJoin" />
                    </div>
                    <div>
                        <h4>Choose award:</h4>
                        <p>
                            <select class="award_chosen_join">
                                @{
                                    allAwards = DependencyResolver.AwardLogic?.GetAll();
                                    foreach (var award in allAwards)
                                        {<option selected>@award.Title</option>}
                                }
                            </select>
                            <select class="award_chosen_join_guid" style="display: none;">
                                @{
                                    foreach (var award in allAwards)
                                        {<option selected>@award.Guid.ToString()</option>}
                                }
                            </select>
                        </p>
                        <input type="text" class="award_guid_join" style="display: none;" name="awardGuidJoin" />
                    </div>
                    @Html.Raw(File.ReadAllText(root + @"\Pages\JoinUserAward.html"))
                </form>
                <form method="post" action="" class="user_edition" style="display: none;">
                    @{
                        users = DependencyResolver.UserLogic?.GetAll();
                        foreach (var user in users)
                        {
                            <div>
                                <input type="text" name="userNames" value=@user.Name />
                                <input type="date" name="userDates" value=@user.DateOfBirth.ToString("yyyy-MM-dd") />
                                <input type="text" name="userGuids" value=@user.Guid.ToString() style="display: none" />
                            </div>
                        }
                    }
                    @Html.Raw(File.ReadAllText(root + @"\Pages\EditUser.html"))
                </form>
                <form method="post" action="" class="award_edition" style="display: none;">
                    @{
                        var awards = DependencyResolver.AwardLogic?.GetAll();

                        foreach (var award in awards)
                        {
                            <div>
                                <input type="text" name="awardTitles" value=@award.Title>
                                <input type="text" name="awardGuids" style="display: none" value=@award.Guid.ToString()>
                            </div>
                        }
                    }
                    @Html.Raw(File.ReadAllText(root + @"\Pages\EditAward.html"))
                </form>
                <form enctype="multipart/form-data" method="post" action="" class="user_image_upload" style="display: none;">
                    <h3>Upload image to user</h3>
                    <div>
                        <h4>Choose user:</h4>
                        <p>
                            <select class="user_chosen_image">
                                @{
                                    users = DependencyResolver.UserLogic?.GetAll();
                                    foreach (var user in users)
                                        {<option selected>@(user.Name + " " + user.DateOfBirth.ToString(Entities.User.DateFormat))</option>}
                                }
                            </select>
                            <select class="user_chosen_image_guid" style="display: none;">
                                @{
                                    foreach (var user in users)
                                        {<option selected>@user.Guid.ToString()</option>}
                                }
                            </select>
                        </p>
                        <input type="text" class="user_image_guid" style="display: none;" name="userImageGuid" />
                    </div>
                    @Html.Raw(File.ReadAllText(root + @"\Pages\ChooseUserImage.html"))
                </form>
                <form enctype="multipart/form-data" method="post" action="" class="award_image_upload" style="display: none;">
                    <h3>Upload image to award</h3>
                    <div>
                        <h4>Choose award:</h4>
                        <p>
                            <select class="award_chosen_image">
                                @{
                                    awards = DependencyResolver.AwardLogic?.GetAll();
                                    foreach (var award in awards)
                                        {<option selected>@(award.Title)</option>}
                                }
                            </select>
                            <select class="award_chosen_image_guid" style="display: none;">
                                @{
                                    foreach (var award in awards)
                                        {<option selected>@award.Guid.ToString()</option>}
                                }
                            </select>
                        </p>
                        <input type="text" class="award_image_guid" style="display: none;" name="awardImageGuid" />
                    </div>
                    @Html.Raw(File.ReadAllText(root + @"\Pages\ChooseAwardImage.html"))
                </form>
                <form enctype="multipart/form-data" method="post" action="" class="adminpanel" style="display: none;">
                    <h3>Set user role:</h3>
                    <p class="alertbox"></p>
                    <div>
                        @{
                            var webusers = Webuser.GetAll();
                            var counter = 0;
                            foreach (var webuser in webusers)
                            {
                                <p>
                                    @webuser.Name
                                    <label>
                                        <input type="radio" class="userRole" name="roleName@(counter)" value="@(webuser.Role.Name)" checked />@(webuser.Role.Name)
                                        <input type="text" class="checkedRole" name="checkedRole" style="display: none;">
                                    </label>
                                    @{
                                        var roleList = Role.List;
                                        foreach (var role in roleList)
                                        {
                                            if (role.Name != webuser.Role.Name)
                                            {
                                                <label>
                                                    <input type="radio" class="userRole" name="roleName@(counter)" value="@(role.Name)" />@(role.Name)
                                                </label>
                                            }
                                        }
                                    }
                                </p>
                                counter++;
                            }
                        }
                    </div>
                    @Html.Raw(File.ReadAllText(root + @"\Pages\AdminpanelFinish.html"))
                </form>
            }
        }
    </div>
</body>
</html>
