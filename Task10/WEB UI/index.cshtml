@{
    var userName = string.Empty;
    var dateOfBirth = string.Empty;
    var userGuid = string.Empty;
    var awardGuid = string.Empty;
    var awardTitle = string.Empty;
    var userGuidJoin = string.Empty;
    var awardGuidJoin = string.Empty;
    string[] names;
    string[] dates;
    string[] userGuids;
    string[] titles;
    string[] awardGuids;
    var userImages = HttpContext.Current.Request.Files;
    var userImageGuid = string.Empty;

    if (IsPost)
    {
        UserCreation();
        DeleteUsersWithAwards();
        AwardCreation();
        DeleteAwardsWithUsers();
        JoinAwardToUser();
        EditUsers();
        EditAwards();

        SaveImageDemo();

        //POST-reload page fix
        @Html.Raw("<script>document.location='https://localhost:44337/index.cshtml'</script>");
    }

    void SaveImageDemo()
    {
        if (userImages == null)
        {
            return;
        }

        if (userImages.Count == 0)
        {
            return;
        }

        var image = userImages[0];

        if (image == null)
        {
            return;
        }

        var imageFileName = Path.GetFileName(image.FileName);

        if (imageFileName == string.Empty)
        {
            return;
        }

        userImageGuid = Request.Form["userImageGuid"];

        var imagePath = Server.MapPath(imageFileName);
        image.SaveAs(imagePath);

        var imageBytes = File.ReadAllBytes(imagePath);
        File.Delete(imagePath);

        var root = Server.MapPath("~");
        var finalPath = Path.Combine(root, userImageGuid);
        File.WriteAllBytes(finalPath, imageBytes);
    }

    void EditUsers()
    {
        names = Request.Form.GetValues("userNames");
        dates = Request.Form.GetValues("userDates");
        userGuids = Request.Form.GetValues("userGuids");

        if (names != null & dates != null & userGuids != null)
        {
            DeleteAllUsers();

            var i = 0;

            foreach (var name in names)
            {
                if (name != null & dates[i] != null)
                {
                    AddUser(name, dates[i], userGuids[i]);
                }

                i++;
            }
        }
    }

    void EditAwards()
    {
        titles = Request.Form.GetValues("awardTitles");
        awardGuids = Request.Form.GetValues("awardGuids");

        if (titles != null & awardGuids != null)
        {
            DeleteAllAwards();

            var i = 0;

            foreach (var title in titles)
            {
                if (title != null & awardGuids[i] != null)
                {
                    AddAward(title, awardGuids[i]);
                }

                i++;
            }
        }
    }

    void AddUser(string name, string date, string guid)
    {
        var user = new Entities.User(Guid.Parse(guid), name, DateTime.Parse(date));
        new DependencyResolver()?.UserBll?.UserAdded(user);
    }

    void AddAward(string title, string guid)
    {
        var award = new Entities.Award(Guid.Parse(guid), title);
        new DependencyResolver()?.AwardBll?.AwardAdded(award);
    }

    void DeleteAllUsers()
    {
        var userBll = new DependencyResolver()?.UserBll;
        var allUsers = userBll?.GetAll();

        foreach (var user in allUsers)
        {
            userBll?.UserRemoved(user.UserGuid);
        }
    }

    void DeleteAllAwards()
    {
        var awardBll = new DependencyResolver()?.AwardBll;
        var allAwards = awardBll?.GetAll();

        foreach (var award in allAwards)
        {
            awardBll?.AwardRemoved(award.AwardGuid);
        }
    }

    void UserCreation()
    {
        userName = Request.Form["userName"];
        dateOfBirth = Request.Form["dateOfBirth"];

        if (userName != null & dateOfBirth != null)
        {
            CreateUser(userName, dateOfBirth);
        }
    }

    void CreateUser(string name, string date)
    {
        if (name != string.Empty & date != string.Empty)
        {
            var userBll = new DependencyResolver()?.UserBll;
            var user = userBll?.CreateUser(name, DateTime.Parse(date));
            userBll.UserAdded(user);
        }
    }

    void AwardCreation()
    {
        awardTitle = Request.Form["awardTitle"];

        if (awardTitle != null)
        {
            CreateAward();
        }
    }

    void CreateAward()
    {
        if (awardTitle != string.Empty)
        {
            var awardBll = new DependencyResolver()?.AwardBll;
            var award = awardBll?.CreateAward(awardTitle);
            awardBll.AwardAdded(award);
        }
    }

    void DeleteUsersWithAwards()
    {
        userGuid = Request.Form["userGuid"];

        if (userGuid != null)
        {
            new DependencyResolver()?.UserAwardBll?.UserRemoved(Guid.Parse(userGuid));
        }
    }

    void DeleteAwardsWithUsers()
    {
        awardGuid = Request.Form["awardGuid"];

        if (awardGuid != null & awardGuid != "")
        {
            new DependencyResolver()?.UserAwardBll?.AwardRemoved(Guid.Parse(awardGuid));
        }
    }

    void JoinAwardToUser()
    {
        userGuidJoin = Request.Form["userGuidJoin"];
        awardGuidJoin = Request.Form["awardGuidJoin"];

        if (userGuidJoin != null & awardGuidJoin != null)
        {
            new DependencyResolver()?.UserAwardBll?.JoinedAwardToUser
            (
                Guid.Parse(userGuidJoin), Guid.Parse(awardGuidJoin)
            );
        }
    }
}

@using Common;
@using System;

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <script src="script.js"></script>
    <link rel="stylesheet" href="styles.css" type="text/css" />
    <link rel="shortcut icon" href="favicon.ico" type="image/x-icon">
    <title>UserAwards</title>
</head>
<body>
    <div id="main" class="main">
        <div class="block">
            <div class="caption">
                Users operations
            </div>
            <div class="options">
                <div class="button">
                    <input type="button" class="user_create" value="create" />
                </div>
                <div class="button">
                    <input type="button" class="user_delete" value="delete" />
                </div>
                <div class="button">
                    <input type="button" class="user_print" value="print" />
                </div>
                <div class="button">
                    <input type="button" class="user_edit" value="edit" />
                </div>
                <div class="button">
                    <input type="button" class="user_upload_image" value="upload image" />
                </div>
            </div>
        </div>
        <div class="block">
            <div class="caption">
                Awards operations
            </div>
            <div class="options">
                <div class="button">
                    <input type="button" class="award_create" value="create" />
                </div>
                <div class="button">
                    <input type="button" class="award_delete" value="delete" />
                </div>
                <div class="button">
                    <input type="button" class="award_print" value="print" />
                </div>
                <div class="button">
                    <input type="button" class="award_edit" value="edit" />
                </div>
                <div class="button">
                    <input type="button" class="award_image_upload" value="upload image" />
                </div>
            </div>
        </div>
        <div class="block">
            <div class="caption">
                Join operations
            </div>
            <div class="options">
                <div class="button">
                    <input type="button" class="join_button" value="join award to user" />
                </div>
            </div>
        </div>
    </div>
    <div class="operations">
        <form method="post" action="" class="user_creation" style="display: none">
            <h4>User creation</h4>
            <p class="alertbox"></p>
            <p>Name: <input type="text" id="userName" class="name" name="userName" value=@userName></p>
            <p>Date of birth: <input type="date" id="dateOfBirth" class="dateOfBirth" name="dateOfBirth" value=@dateOfBirth></p>
            <input type="submit" class="user_create" value="Create" />
            <input type="button" class="cancel" value="Cancel" />
        </form>
        <form method="post" action="" class="award_creation" style="display: none">
            <h4>Award creation</h4>
            <p class="alertbox"></p>
            <p>Title: <input type="text" id="awardTitle" class="title" name="awardTitle" value=@awardTitle></p>
            <input type="submit" class="award_create" value="Create" />
            <input type="button" class="cancel" value="Cancel" />
        </form>
        <form method="post" action="" class="user_del" style="display: none;">
            <h4>Choose user to delete:</h4>
            <p>
                <select class="user_chosen">
                    @{
                        var users = new DependencyResolver()?.UserBll?.GetAll();

                        foreach (var user in users)
                        {
                            <option selected>@(user.Name + " " + user.DateOfBirth.ToString(Entities.User.DateFormat))</option>
                        }
                    }
                </select>
                <select class="user_chosen_guid" style="display: none;">
                    @{
                        foreach (var user in users)
                        {
                            <option selected>@user.UserGuid.ToString()</option>
                        }
                    }
                </select>
            </p>
            <input type="text" class="user_guid" style="display: none;" name="userGuid" value=@userGuid>
            <input type="submit" class="user_delete" value="Delete" />
            <input type="button" class="cancel" value="Cancel" />
        </form>
        <form method="post" action="" class="award_del" style="display: none;">
            <h4>Choose award to delete:</h4>
            <p>
                <select class="award_chosen">
                    @{
                        var awards = new DependencyResolver()?.AwardBll?.GetAll();

                        foreach (var award in awards)
                        {
                            <option selected>@award.Title</option>
                        }
                    }
                </select>
                <select class="award_chosen_guid" style="display: none;">
                    @{
                        foreach (var award in awards)
                        {
                            <option selected>@award.AwardGuid.ToString()</option>
                        }
                    }
                </select>
            </p>
            <input type="text" class="award_guid" style="display: none;" name="awardGuid" value=@awardGuid>
            <input type="submit" class="award_delete" value="Delete" />
            <input type="button" class="cancel" value="Cancel" />
        </form>
        <div class="listusers" style="display: none;">
            @{
                users = new DependencyResolver()?.UserBll?.GetAll();
                IEnumerable<Entities.Award> awardsByUser;

                foreach (var user in users)
                {
                    <p>@(user.Name + " " + user.DateOfBirth.ToString(Entities.User.DateFormat))</p>

                    awardsByUser = new DependencyResolver()?.UserAwardBll?.GetAwardsByUser(user);

                    foreach (var awardByUser in awardsByUser)
                    {
                        <p>@("--- " + awardByUser.Title)</p>
                    }
                }
            }
            <input type="button" class="cancel" value="Back" />
        </div>
        <div class="listawards" style="display: none;">
            @{
                awards = new DependencyResolver()?.AwardBll?.GetAll();

                foreach (var award in awards)
                {
                    <p>@award.Title</p>
                }
            }
            <input type="button" class="cancel" value="Back" />
        </div>
        <form method="post" action="" class="join" style="display: none; padding-left: 25px;">
            <h3>Join</h3>
            <div>
                <h4>Choose user:</h4>
                <p>
                    <select class="user_chosen_join">
                        @{
                            users = new DependencyResolver()?.UserBll?.GetAll();

                            foreach (var user in users)
                            {
                                <option selected>@(user.Name + " " + user.DateOfBirth.ToString(Entities.User.DateFormat))</option>
                            }
                        }
                    </select>
                    <select class="user_chosen_join_guid" style="display: none;">
                        @{
                            foreach (var user in users)
                            {
                                <option selected>@user.UserGuid.ToString()</option>
                            }
                        }
                    </select>
                </p>
                <input type="text" class="user_guid_join" style="display: none;" name="userGuidJoin" value=@userGuidJoin>
            </div>
            <div>
                <h4>Choose award:</h4>
                <p>
                    <select class="award_chosen_join">
                        @{
                            awards = new DependencyResolver()?.AwardBll?.GetAll();

                            foreach (var award in awards)
                            {
                                <option selected>@award.Title</option>
                            }
                        }
                    </select>
                    <select class="award_chosen_join_guid" style="display: none;">
                        @{
                            foreach (var award in awards)
                            {
                                <option selected>@award.AwardGuid.ToString()</option>
                            }
                        }
                    </select>
                </p>
                <input type="text" class="award_guid_join" style="display: none;" name="awardGuidJoin" value=@awardGuidJoin>
            </div>
            <div>
                <input type="submit" class="join_user_award" value="Join" />
                <input type="button" class="cancel" value="Cancel" />
            </div>
        </form>
        <form method="post" action="" class="user_edition" style="display: none;">
            @{
                users = new DependencyResolver()?.UserBll?.GetAll();

                foreach (var user in users)
                {
                    <div>
                        <input type="text" name="userNames" value=@user.Name />
                        <input type="date" name="userDates" value=@user.DateOfBirth.ToString("yyyy-MM-dd") />
                        <input type="text" name="userGuids" value=@user.UserGuid.ToString() style="display: none" />
                    </div>
                }
            }
            <p>
                <input type="submit" class="edit_user" value="Ok" />
                <input type="button" class="cancel" value="Cancel" />
            </p>
        </form>
        <form method="post" action="" class="award_edition" style="display: none;">
            @{
                awards = new DependencyResolver()?.AwardBll?.GetAll();

                foreach (var award in awards)
                {
                    <div>
                        <input type="text" name="awardTitles" value=@award.Title />
                        <input type="text" name="awardGuids" value=@award.AwardGuid.ToString() style="display: none" />
                    </div>
                }
            }
            <p>
                <input type="submit" class="edit_award" value="Ok" />
                <input type="button" class="cancel" value="Cancel" />
            </p>
        </form>
        <form enctype="multipart/form-data" method="post" action="" class="user_image_upload" style="display: none; padding-left: 25px;">
            <h3>Upload image to user</h3>
            <div>
                <h4>Choose user:</h4>
                <p>
                    <select class="user_chosen_image">
                        @{
                            users = new DependencyResolver()?.UserBll?.GetAll();

                            foreach (var user in users)
                            {
                                <option selected>@(user.Name + " " + user.DateOfBirth.ToString(Entities.User.DateFormat))</option>
                            }
                        }
                    </select>
                    <select class="user_chosen_image_guid" style="display: none;">
                        @{
                            foreach (var user in users)
                            {
                                <option selected>@user.UserGuid.ToString()</option>
                            }
                        }
                    </select>
                </p>
                <input type="text" class="user_image_guid" style="display: none;" name="userImageGuid" value=@userImageGuid>
            </div>
            <h4>Choose image:</h4>
            <p class="alertbox"></p>
            <p>
                <input type="file" class="userImage" name="userImage" accept="image/*" value=@userImages>
            </p>
            <div style="padding-top: 20px;">
                <input type="submit" class="upload_user_image" value="Ok" />
                <input type="button" class="cancel" value="Cancel" />
            </div>
        </form>
    </div>
</body>
</html>